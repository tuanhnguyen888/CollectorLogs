// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	database "collector/database"

	mock "github.com/stretchr/testify/mock"
)

// IRaw is an autogenerated mock type for the IRaw type
type IRaw struct {
	mock.Mock
}

// Rows provides a mock function with given fields:
func (_m *IRaw) Rows() (database.IRow, error) {
	ret := _m.Called()

	var r0 database.IRow
	var r1 error
	if rf, ok := ret.Get(0).(func() (database.IRow, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() database.IRow); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database.IRow)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Scan provides a mock function with given fields: dest
func (_m *IRaw) Scan(dest interface{}) error {
	ret := _m.Called(dest)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(dest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRaw interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRaw creates a new instance of IRaw. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRaw(t mockConstructorTestingTNewIRaw) *IRaw {
	mock := &IRaw{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
