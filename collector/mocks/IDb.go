// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	database "collector/database"

	mock "github.com/stretchr/testify/mock"
)

// IDb is an autogenerated mock type for the IDb type
type IDb struct {
	mock.Mock
}

// Raw provides a mock function with given fields: sql, values
func (_m *IDb) Raw(sql string, values ...interface{}) database.IRaw {
	var _ca []interface{}
	_ca = append(_ca, sql)
	_ca = append(_ca, values...)
	ret := _m.Called(_ca...)

	var r0 database.IRaw
	if rf, ok := ret.Get(0).(func(string, ...interface{}) database.IRaw); ok {
		r0 = rf(sql, values...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database.IRaw)
		}
	}

	return r0
}

type mockConstructorTestingTNewIDb interface {
	mock.TestingT
	Cleanup(func())
}

// NewIDb creates a new instance of IDb. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIDb(t mockConstructorTestingTNewIDb) *IDb {
	mock := &IDb{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
