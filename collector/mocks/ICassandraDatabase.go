// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	database "collector/database"

	mock "github.com/stretchr/testify/mock"
)

// ICassandraDatabase is an autogenerated mock type for the ICassandraDatabase type
type ICassandraDatabase struct {
	mock.Mock
}

// Query provides a mock function with given fields: query, args
func (_m *ICassandraDatabase) Query(query string, args ...interface{}) database.IQuery {
	var _ca []interface{}
	_ca = append(_ca, query)
	_ca = append(_ca, args...)
	ret := _m.Called(_ca...)

	var r0 database.IQuery
	if rf, ok := ret.Get(0).(func(string, ...interface{}) database.IQuery); ok {
		r0 = rf(query, args...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(database.IQuery)
		}
	}

	return r0
}

type mockConstructorTestingTNewICassandraDatabase interface {
	mock.TestingT
	Cleanup(func())
}

// NewICassandraDatabase creates a new instance of ICassandraDatabase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewICassandraDatabase(t mockConstructorTestingTNewICassandraDatabase) *ICassandraDatabase {
	mock := &ICassandraDatabase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
